// Rachel Lee
// Name That Tune
// The user tries to guess the name of the song given a short audio clip
// January 19, 2014

package com.example.namethattune;

import java.io.IOException;
import java.util.Scanner;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.Button;

public class MainActivity extends Activity{
	Activity context;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        context = this;       
        
        // "pop" button
        ((Button)findViewById(R.id.button1)).setOnClickListener(new View.OnClickListener() {
        	
        	// Starts the game and tells PlayGameActivity that the category is "pop"
			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				try {
					String [] songNames = openFile(15,R.raw.song_names_pop, context);
					startNewActivity(songNames, "pop");
				} catch (IOException e) {
				}
			}
        });
        
        // "rock" button
        ((Button)findViewById(R.id.button2)).setOnClickListener(new View.OnClickListener() {

        	// Starts the game and tells PlayGameActivity that the category is "pop"
			@Override
			public void onClick(View arg0) {
				try {
					String [] songNames = openFile(15,R.raw.song_names_rock, context);
					startNewActivity(songNames, "rock");
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}	
			} 	
        });

    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    
    private static String[] openFile(int size, int fileName, Context context) throws IOException {
		// Opens file at beginning at program and adds all song names to a String array
    	/* @param size		The number of lines in the file
    	 * @param fileName	The name of the file
    	 * @param context	The Context the resource is in
    	 * @return			An array of song names
    	 */
		
		Scanner s = null;
		String [] names = new String[size];
		int index = 0;
		
		try{
			// Tries to open file
			// Adds Employees to ArrayList
			s = new Scanner(context.getResources().openRawResource(fileName)).useDelimiter("\\s*[\n]\\s*");
		
			while (s.hasNext()) {
				// Adds song names to the array
				names[index]=s.next();
				index++;
			}
		}
		
		finally {
			if (s!= null) {
				// Closes file if it was open
				s.close();
			}		
		}
		return names;
	}
    
    private void startNewActivity(String[] songNames, String category) {
    	// Starts PlayGameActivity
    	/* @param songNames		A string array of song names
    	 * @param category		The category to choose songs from
    	 */
    	
    	Intent intent = new Intent(context, PlayGameActivity.class);
		intent.putExtra("songNames", songNames);
		intent.putExtra("category", category);
    	startActivity(intent);
    }
    
}
